From 9fc0336d4ddc86787d51d7561d52f09e5f423ddc Mon Sep 17 00:00:00 2001
From: Ghosuto <clash.raja10@gmail.com>
Date: Sat, 22 Mar 2025 08:25:06 +0000
Subject: [PATCH 12/24] SystemUI: Enhance media playback gestures and controls

- Added swipe gestures to change tracks.
- Implemented double-tap to play/pause.

Signed-off-by: Ghosuto <clash.raja10@gmail.com>
---
 .../res/drawable-night/popup_background.xml   |   7 ++
 .../res/drawable/ic_default_music_icon.xml    |  14 +--
 .../res/drawable/popup_background.xml         |   7 ++
 .../res/layout/media_control_popup.xml        |  28 +++++
 .../OnGoingActionProgressController.java      | 100 ++++++++++++++++--
 5 files changed, 141 insertions(+), 15 deletions(-)
 create mode 100644 packages/SystemUI/res/drawable-night/popup_background.xml
 create mode 100644 packages/SystemUI/res/drawable/popup_background.xml
 create mode 100644 packages/SystemUI/res/layout/media_control_popup.xml

diff --git a/packages/SystemUI/res/drawable-night/popup_background.xml b/packages/SystemUI/res/drawable-night/popup_background.xml
new file mode 100644
index 000000000..1ff16466e
--- /dev/null
+++ b/packages/SystemUI/res/drawable-night/popup_background.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+    <corners android:radius="16dp" />
+    <solid android:color="@android:color/system_neutral1_900" />
+    <padding android:left="8dp" android:top="8dp" android:right="8dp" android:bottom="8dp" />
+</shape>
diff --git a/packages/SystemUI/res/drawable/ic_default_music_icon.xml b/packages/SystemUI/res/drawable/ic_default_music_icon.xml
index 3bbd10e71..6df40cf3b 100644
--- a/packages/SystemUI/res/drawable/ic_default_music_icon.xml
+++ b/packages/SystemUI/res/drawable/ic_default_music_icon.xml
@@ -1,11 +1,11 @@
 <?xml version="1.0" encoding="utf-8"?>
 <vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportWidth="24"
-    android:viewportHeight="24">
+        android:width="24.0dp"
+        android:height="24.0dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0"
+        android:tint="?android:attr/colorControlNormal">
     <path
-        android:fillColor="?android:attr/colorForeground"
-        android:pathData="M12,3V21L19,16V8L12,3Z M7,8V16L12,21V3L7,8Z" />
+        android:fillColor="#FF000000"
+        android:pathData="M21,3V15.5A3.5,3.5 0 0,1 17.5,19A3.5,3.5 0 0,1 14,15.5A3.5,3.5 0 0,1 17.5,12C18.04,12 18.55,12.12 19,12.34V6.47L9,8.6V17.5A3.5,3.5 0 0,1 5.5,21A3.5,3.5 0 0,1 2,17.5A3.5,3.5 0 0,1 5.5,14C6.04,14 6.55,14.12 7,14.34V6L21,3Z" />
 </vector>
-
diff --git a/packages/SystemUI/res/drawable/popup_background.xml b/packages/SystemUI/res/drawable/popup_background.xml
new file mode 100644
index 000000000..e1f643329
--- /dev/null
+++ b/packages/SystemUI/res/drawable/popup_background.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+    <corners android:radius="16dp" />
+    <solid android:color="@android:color/system_neutral1_50" />
+    <padding android:left="8dp" android:top="8dp" android:right="8dp" android:bottom="8dp" />
+</shape>
diff --git a/packages/SystemUI/res/layout/media_control_popup.xml b/packages/SystemUI/res/layout/media_control_popup.xml
new file mode 100644
index 000000000..7e8a1edf6
--- /dev/null
+++ b/packages/SystemUI/res/layout/media_control_popup.xml
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    android:padding="8dp"
+    android:orientation="horizontal"
+    android:background="@drawable/popup_background"
+    android:gravity="center">
+
+    <ImageButton
+        android:id="@+id/btn_previous"
+        android:layout_width="48dp"
+        android:layout_height="48dp"
+        android:background="?android:attr/selectableItemBackgroundBorderless"
+        android:scaleType="centerInside"
+        android:tint="?android:attr/colorAccent"
+        android:src="@drawable/ic_media_output_prev" />
+
+    <ImageButton
+        android:id="@+id/btn_next"
+        android:layout_width="48dp"
+        android:layout_height="48dp"
+        android:background="?android:attr/selectableItemBackgroundBorderless"
+        android:scaleType="centerInside"
+        android:tint="?android:attr/colorAccent"
+        android:src="@drawable/ic_media_output_next" />
+
+</LinearLayout>
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/OnGoingActionProgressController.java b/packages/SystemUI/src/com/android/systemui/statusbar/OnGoingActionProgressController.java
index 099658f8f..f0c67fcda 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/OnGoingActionProgressController.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/OnGoingActionProgressController.java
@@ -34,9 +34,13 @@ import android.service.notification.StatusBarNotification;
 import android.util.Log;
 import android.util.TypedValue;
 import android.view.GestureDetector;
+import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ImageButton;
 import android.widget.ImageView;
+import android.widget.PopupWindow;
 import android.widget.ProgressBar;
 
 import com.android.systemui.res.R;
@@ -51,6 +55,9 @@ public class OnGoingActionProgressController implements NotificationListener.Not
     private static final String ONGOING_ACTION_CHIP_ENABLED = "ongoing_action_chip";
     private static final String SHOW_MEDIA_PROGRESS = "show_media_progress";
 
+    private static final int SWIPE_THRESHOLD = 100;
+    private static final int SWIPE_VELOCITY_THRESHOLD = 100;
+
     private Context mContext;
     private ContentResolver mContentResolver;
     private final Handler mHandler;
@@ -76,6 +83,7 @@ public class OnGoingActionProgressController implements NotificationListener.Not
     private final IconFetcher mIconFetcher;
     private final NotificationListener mNotificationListener;
     private boolean mIsEnabled;
+    private PopupWindow mMediaPopup;
 
     private final GestureDetector mGestureDetector;
     private final MediaSessionManagerHelper mMediaSessionHelper;
@@ -164,20 +172,49 @@ public class OnGoingActionProgressController implements NotificationListener.Not
         mGestureDetector = new GestureDetector(mContext, new GestureDetector.SimpleOnGestureListener() {
             @Override
             public boolean onSingleTapConfirmed(MotionEvent e) {
-                toggleMediaPlaybackState();
+                if (mShowMediaProgress && mMediaSessionHelper.isMediaPlaying()) {
+                    showMediaPopup(mProgressRootView);
+                } else {
+                    openTrackedApp();
+                }
                 return true;
             }
 
             @Override
             public boolean onDoubleTap(MotionEvent e) {
-                skipToNextTrack();
+                if (mShowMediaProgress && mMediaSessionHelper.isMediaPlaying()) {
+                    toggleMediaPlaybackState();
+                }
                 return true;
             }
 
             @Override
             public void onLongPress(MotionEvent e) {
-                openMediaApp();
+                if (mShowMediaProgress && mMediaSessionHelper.isMediaPlaying()) {
+                    openMediaApp();
+                }
+            }
+
+            @Override
+            public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {
+                if (!(mShowMediaProgress && mMediaSessionHelper.isMediaPlaying())) {
+                    return false;
+                }
+
+                float diffX = e2.getX() - e1.getX();
+                if (Math.abs(diffX) > Math.abs(e2.getY() - e1.getY())) {
+                    if (Math.abs(diffX) > SWIPE_THRESHOLD && Math.abs(velocityX) > SWIPE_VELOCITY_THRESHOLD) {
+                        if (diffX > 0) {
+                            skipToNextTrack();
+                        } else {
+                            skipToPreviousTrack();
+                        }
+                        return true;
+                    }
+                }
+                return false;
             }
+
         });
 
         // Register settings observer
@@ -288,6 +325,10 @@ public class OnGoingActionProgressController implements NotificationListener.Not
                 mProgressBar.setMax((int) totalDuration);
                 mProgressBar.setProgress((int) currentProgress);
             }
+
+            // Attach Swipe Gesture for Media Progress Bar
+            mProgressRootView.setOnTouchListener((v, event) -> mGestureDetector.onTouchEvent(event));
+
             return;
         }
 
@@ -295,6 +336,11 @@ public class OnGoingActionProgressController implements NotificationListener.Not
         if (!mIsEnabled || !mIsTrackingProgress) {
             mProgressRootView.setVisibility(View.GONE);
             mMediaProgressHandler.removeCallbacks(mMediaProgressRunnable);
+
+            // ðŸ”¹ Reset media icon when media stops playing
+            if (!mMediaSessionHelper.isMediaPlaying()) {
+                mIconView.setImageDrawable(null); 
+            }
             return;
         }
 
@@ -327,6 +373,43 @@ public class OnGoingActionProgressController implements NotificationListener.Not
         }
     }
 
+    private void showMediaPopup(View anchorView) {
+        if (mMediaPopup != null && mMediaPopup.isShowing()) {
+            mMediaPopup.dismiss();
+            return;
+        }
+
+        // Inflate the popup layout
+        View popupView = LayoutInflater.from(mContext).inflate(R.layout.media_control_popup, null);
+
+        // Initialize PopupWindow
+        mMediaPopup = new PopupWindow(popupView, ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT, true);
+        mMediaPopup.setOutsideTouchable(true);
+        mMediaPopup.setFocusable(true);
+
+        // Set up buttons (Only Previous & Next)
+        ImageButton btnPrevious = popupView.findViewById(R.id.btn_previous);
+        ImageButton btnNext = popupView.findViewById(R.id.btn_next);
+
+        // Set button actions
+        btnPrevious.setOnClickListener(v -> {
+            skipToPreviousTrack();
+            mMediaPopup.dismiss();
+        });
+
+        btnNext.setOnClickListener(v -> {
+            skipToNextTrack();
+            mMediaPopup.dismiss();
+        });
+
+        // Show popup near the anchor view
+        anchorView.post(() -> {
+            int offsetX = -popupView.getWidth() / 3;
+            int offsetY = -anchorView.getHeight();
+            mMediaPopup.showAsDropDown(anchorView, offsetX, offsetY);
+        });
+    }
+
     /** Handles click action to open the corresponding app */
     private void openTrackedApp() {
         if (mTrackedNotificationKey == null || mNotificationListener == null) {
@@ -416,17 +499,17 @@ public class OnGoingActionProgressController implements NotificationListener.Not
 
     // Gesture Actions for Media Progress Bar
     private void toggleMediaPlaybackState() {
-        if (mMediaSessionHelper.isMediaPlaying()) {
-            mMediaSessionHelper.toggleMediaPlaybackState();
-        } else {
-            mMediaSessionHelper.toggleMediaPlaybackState();
-        }
+        mMediaSessionHelper.toggleMediaPlaybackState();
     }
 
     private void skipToNextTrack() {
         mMediaSessionHelper.nextSong();
     }
 
+    private void skipToPreviousTrack() {
+        mMediaSessionHelper.prevSong();
+    }
+
     private void openMediaApp() {
         mMediaSessionHelper.launchMediaApp();
     }
@@ -486,5 +569,6 @@ public class OnGoingActionProgressController implements NotificationListener.Not
         mCurrentProgress = 0;
         mCurrentProgressMax = 0;
         mTrackedNotificationKey = null;
+        mIconView.setImageDrawable(null);
     }
 }
-- 
2.43.0

